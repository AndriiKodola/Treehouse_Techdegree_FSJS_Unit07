{"version":3,"sources":["config.js","SearchForm.js","NavBar.js","Header.js","GalleryItem.js","GalleryItemList.js","NotFound.js","Gallery.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","SearchForm","playerInput","React","createRef","handleSubmit","e","preventDefault","_this","props","changeTopic","current","value","currentTarget","reset","react_default","a","createElement","className","onSubmit","this","type","ref","name","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","NavBar","react_router_dom","to","onClick","randomWords","Header","Fragment","src_SearchForm","src_NavBar","GalleryItem","imgStyle","transform","concat","Math","random","effects","style","src","url","alt","GalleryItemList","pics","map","pic","src_GalleryItem","farm","server","id","secret","key","NotFound","Gallery","numOfMatchesInfo","numOfPics","length","react_router","exact","path","render","src_GalleryItemList","src_NotFound","App","state","topic","loading","handleChangeTopic","query","arguments","undefined","axios","get","then","res","setState","data","photos","photo","catch","err","console","log","prevProps","prevState","src_Header","src_Gallery","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2860cbc0.chunk.js","sourcesContent":["const apiKey = \"c282cd9752ea42bc6f5994fdd96a8277\";\n\nexport default apiKey;\n\n//Secret:\n//5a05279eecd0b3b5\n","import React, { Component } from 'react';\n\nclass SearchForm extends Component {\n\n  playerInput = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.changeTopic(this.playerInput.current.value);//Changes App.js state triggering page re-render\n    e.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"search\"\n          ref={this.playerInput}\n          name=\"search\"\n          placeholder=\"Search\"\n          required/>\n        <button type=\"submit\" className=\"search-button\">\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n          </svg>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport randomWords from 'random-words';\n\nconst NavBar = (props) => (\n  <nav className=\"main-nav\">\n    <ul>\n      <li><NavLink to=\"/initial\"><span>No Effects</span></NavLink></li>{/*Initial pictures look*/}\n      <li><NavLink to=\"/grayscale\"><span>Geyscale</span></NavLink></li>{/*With greyscale filter*/}\n      <li><NavLink to=\"/frames\"><span>Add Frames</span></NavLink></li>{/*With nice frames*/}\n      <li><NavLink to=\"/chaotic\"><span>A little chaos</span></NavLink></li>{/*Adds random rotation*/}\n      <li><NavLink to=\"/random\" onClick={() => props.changeTopic(randomWords())}><span>Don't know what I want...</span></NavLink></li>{/*Directs to the route with random topic. Added to 100% achieve Meets expectations.*/}\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport SearchForm from './SearchForm';\nimport NavBar from './NavBar';\n\n\nconst Header = (props) => (\n  <>\n    <SearchForm changeTopic={props.changeTopic} />\n    <NavBar changeTopic={props.changeTopic} />\n  </>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst GalleryItem = (props) => {\n  const imgStyle = {\n    transform: `rotate(${Math.random()*20-10}deg)`\n  };\n\n  return (\n    <li className={props.effects}>\n      {\n        props.effects === 'chaotic'\n        ? <img style={imgStyle} src={props.url} alt=\"\" />\n        : <img src={props.url} alt=\"\" />\n      }\n    </li>\n  );\n}\n\nexport default GalleryItem;\n","//this components needed to use Route inside Gallery.js\n\nimport React from 'react';\nimport GalleryItem from './GalleryItem';\n\nconst GalleryItemList = (props) => (\n  <ul>\n    {props.pics.map(pic => <GalleryItem effects={props.effects} url={`https://farm${pic.farm}.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}.jpg`} key={pic.id}/>)}\n  </ul>\n)\n\nexport default GalleryItemList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NotFound = (props) => (\n  <div>\n    <p className=\"not-exist\">Oops! This page doesn't exist.</p>{/*404-like message component*/}\n    <NavLink className=\"not-exist\" to='/'>Go back.</NavLink>{/*Link for users to be able to go back to the site*/}\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport GalleryItemList from './GalleryItemList';\nimport NotFound from './NotFound';\n\nconst Gallery = (props) => {\n  let numOfMatchesInfo;//later React component to display number of returned pictures if fewer then 24\n  const numOfPics = props.pics.length;\n\n  if (numOfPics === 0) {\n    numOfMatchesInfo = <span className=\"no-matches\">No matches found.</span>;\n  } else if (numOfPics < 24) {\n    numOfMatchesInfo = <span className=\"fewer-matches\">Only {numOfPics} matches found.</span>;\n  }\n\n  return (\n    <div className=\"photo-container\">\n      <h2>Results</h2>\n      {numOfMatchesInfo}\n      <Switch>\n        <Route exact path=\"/\" render={() => <GalleryItemList effects={null} pics={props.pics} />} />\n        <Route path=\"/initial\" render={() => <GalleryItemList effects={null} pics={props.pics} />} />{/*Renders initial look of the pictures*/}\n        <Route path=\"/grayscale\" render={() => <GalleryItemList effects=\"greyscale\" pics={props.pics} />} />{/*Renders pictures with grayscale filter via CSS*/}\n        <Route path=\"/frames\" render={() => <GalleryItemList effects=\"with-frame\" pics={props.pics} />} />{/*Renders pictures with nice frames via CSS*/}\n        <Route path=\"/chaotic\" render={() => <GalleryItemList effects=\"chaotic\" pics={props.pics} />} />{/*Renders pictures with random rotation via React stylings*/}\n        <Route path=\"/random\" render={() => <GalleryItemList effects={null} pics={props.pics} />} />{/*Renders new random data to meet project requirements*/}\n        <Route render={() => <NotFound changeTopic={props.changeTopic} />} />{/*Renders 404-like message*/}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport apiKey from './config';\n\n//App components\nimport Header from './Header';\nimport Gallery from './Gallery';\n\nclass App extends Component {\n  state = {\n    topic: \"owl\",\n    pics: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.handleChangeTopic();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.topic !== prevState.topic) {\n      this.handleChangeTopic();\n    }\n  }\n\n  //Gets new pics from Flickr according ot the topic in state\n  handleChangeTopic = (query = this.state.topic) => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n      .then(res => {\n        this.setState({\n          pics: res.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log('Error occured in fetching and parding data', err);\n      });\n  }\n\n  //Changes topic in state\n  changeTopic = query => {\n    this.setState({\n      topic: query,\n      loading: true\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"container\">\n          <Header changeTopic={this.changeTopic} />\n          {\n            this.state.loading\n            ? <p>Loading...</p>//If we have no respond jet\n            : <Gallery pics={this.state.pics} changeTopic={this.changeTopic} />\n          }\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}